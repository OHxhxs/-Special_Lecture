# --------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
# --------------------------------------------------------------
# Dockerfile to run ONNXRuntime with CUDA, CUDNN integration
FROM nvcr.io/nvidia/cuda:11.4.2-cudnn8-runtime-ubuntu20.04
ENV	DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y --no-install-recommends libstdc++6 ca-certificates python3-setuptools python3-wheel python3-pip unattended-upgrades && unattended-upgrade

COPY requirements.txt /tmp/requirements.txt
RUN pip install --no-cache-dir -r /tmp/requirements.txt

COPY ./start.sh /start.sh
RUN chmod +x /start.sh

COPY ./gunicorn_conf.py /gunicorn_conf.py

COPY ./start-reload.sh /start-reload.sh
RUN chmod +x /start-reload.sh

COPY ./models /models
COPY ./app /app
WORKDIR /app/

ENV PYTHONPATH=/app

EXPOSE 80

# Run the start script, it will check for an /app/prestart.sh script (e.g. for migrations)
# And then will start Gunicorn with Uvicorn
CMD ["/start.sh"]

# docker build -f Dockerfile.gpu -t myserver:0.0.1-gpu .
# docker build -f Dockerfile.gpu -t myserver:0.0.2-gpu .
# docker build -f Dockerfile.gpu -t myserver:0.0.3-gpu .
# docker images
# docker run -it --rm -p 8000:80 -e MAX_WORKERS=2 myserver:0.0.1-gpu 
# docker run --gpus all -it --rm -p 8000:80 -e MAX_WORKERS=2 myserver:0.0.2-gpu
# docker run --gpus all -it --rm -p 5000:80 -e MAX_WORKERS=2 myserver:0.0.3-gpu

# docker image rm img_id